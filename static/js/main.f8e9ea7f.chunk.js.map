{"version":3,"sources":["view_components/CenteredContainer/styles.module.css","routes/HomeRoute/styles.module.css","store/BaseStore.js","store/PlayerStore.js","use_cases/addPlayer.js","view_components/CenteredContainer/index.js","entities/Game.js","store/GameStore.js","use_cases/getGame.js","routes/JoinRoute.js","use_cases/getPlayer.js","store/AnswerStore.js","utils/popKey.js","store/QuestionStore.js","use_cases/addAnswer.js","routes/PlayerRoute.js","use_cases/findGamesByShortCode.js","routes/HomeRoute/index.js","use_cases/getLobbyPlayers.js","routes/LobbyRoute.js","store/UserStore.js","use_cases/signupUser.js","use_cases/loginUser.js","routes/LoginRoute.js","use_cases/getCurrentUser.js","use_cases/getCurrentUserGames.js","routes/MyGamesRoute.js","use_cases/createGame.js","routes/CreateGameRoute.js","use_cases/startNextQuestion.js","utils/calculateTimeLeft.js","routes/PendingQuestionRoute.js","use_cases/getQuestion.js","use_cases/calculateQuestionResults.js","use_cases/countTotalQuestions.js","routes/QuestionResultsRoute.js","use_cases/calculateFinalResults.js","routes/FinalResultsRoute.js","use_cases/showCurrentQuestion.js","view_components/Question.js","routes/CurrentQuestionRoute.js","routes/HostRoute.js","use_cases/getQuestions.js","use_cases/saveQuestion.js","view_components/EditableQuestion.js","routes/GameDetailsRoute.js","routes/FindGameRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","require","FIREBASE_CONFIG","JSON","parse","process","BaseStore","_createClass","props","_classCallCheck","apps","length","initializeApp","this","firestore","auth","PlayerStore","_BaseStore","_inherits","_super","_createSuper","apply","arguments","key","value","playerId","scopes","undefined","collection","doc","gameId","get","then","_convertDocToPlayer","attributes","chain","add","playerRef","_this","onChange","limit","onSnapshot","playersSnapshot","players","forEach","playerDoc","push","snapshot","docs","map","p","_convertDocToQuestion","Object","assign","id","data","addPlayer","create","CenteredContainer","React","createElement","Container","className","styles","centered","style","maxWidth","height","verticalCentered","children","Game","GameStore","state","STATE_DRAFT","ref","_convertDocToGame","_getGameDoc","gameDoc","_this2","where","ownerId","shortCode","a","currentQuestion","currentQuestionId","update","game","path","getGame","JoinForm","_ref","playerName","setPlayerName","joinGame","Form","onSubmit","e","preventDefault","FormGroup","Label","Input","target","Button","color","type","JoinRoute","useParams","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setPlayerId","_useState5","_useState6","setGame","useEffect","name","Redirect","to","concat","getPlayer","AnswerStore","_popAttr","questionId","player","join","question","answerRef","_convertDocToAnswer","answerDoc","obj","attr","val","popKey","QuestionStore","addAttrs","questionDoc","attributesCopy","qnRef","qnDoc","_this3","from","orderBy","q","addAttributes","addAnswer","questionStore","isCorrect","correctAnswer","choice","console","log","AnswerGrid","recordAnswer","Row","ans","Col","sm","md","onClick","PlayerRoute","_useParams","currentGame","setCurrentGame","answer","setAnswer","_useState7","_useState8","errorMessage","setErrorMessage","handleGameChange","catch","setTimeout","Alert","findGamesByShortCode","list","String","STATE_WAITING_FOR_PLAYERS","HomeRoute","games","setGames","setShortCode","ListGroup","Link","ListGroupItem","tag","action","hero_heading","for","disabled","getLobbyPlayers","playerStore","gameStore","PlayerList","LobbyRoute","setPlayers","joinUrl","window","location","origin","href","rel","UserStore","email","password","createUserWithEmailAndPassword","userCredentials","firebaseUser","user","_convertUser","error","errorCode","code","message","alert","signInWithEmailAndPassword","handleChange","onAuthStateChanged","uid","displayName","signupUser","loginUser","login","handleSubmit","event","authFn","successCallback","SignupForm","_ref2","onUserChange","setEmail","setPassword","f","LoginForm","_ref3","LoginRoute","_useState9","_useState10","isExistingUser","setIsExistingUser","_useState11","_useState12","setUser","toggleForm","getCurrentUser","userStore","Promise","resolve","onCurrentUserChange","getCurrentUserGames","MyGamesRoute","redirectUrl","setRedirectUrl","createGame","Math","floor","random","CreateGameRoute","gameName","setGameName","gameAttributes","onCreate","startNextQuestion","nextOrder","order","questionArray","tickTimer","endDate","intervalCallback","endedCallback","timeLeft","date","difference","Date","now","calculateTimeLeft","startTimer","seconds","PendingQuestionRoute","parentUrl","setTimeLeft","nextQuestion","setNextQuestion","ceil","getQuestion","calculateQuestionResults","answerStore","answers","results","countTotalQuestions","questions","isCorrectChoice","ResultBoard","result","text","entries","Card","inverse","CardBody","CardTitle","CardText","QuestionResultsRoute","_ref4","setResult","setQuestion","totalQuestionCount","setTotalQuestionCount","calculateFinalResults","filter","reduce","acc","curr","sortScores","b","score1","score2","Leaderboard","scores","sort","slice","index","Badge","FinalResultsRoute","setResults","showCurrentQuestion","Question","ShowResultsBtn","isVisible","linkTo","CurrentQuestionRoute","HostRoute","_useRouteMatch","useRouteMatch","url","Switch","base","Route","getQuestions","saveQuestion","EditableQuestion","draftQuestion","setDraftQuestion","componentState","setComponentState","updateDraft","newAttributes","body","InputGroup","placeholder","ansKey","InputGroupAddon","addonType","InputGroupText","_defineProperty","data-testid","Spinner","size","GameDetailsRoute","setQuestions","newQn","FindGameRoute","gameIdPrefix","URLSearchParams","useLocation","search","App","Router","exact","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8e9ea7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"centered\":\"styles_centered__x3bzC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_heading\":\"styles_hero_heading__1odbt\"};","const firebase = require('firebase');\n\nconst FIREBASE_CONFIG = JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG);\n\n\nclass BaseStore {\n  constructor(props) {\n    // workaround to prevent initializing multiple times\n    if (!firebase.apps.length) {\n      firebase.initializeApp(FIREBASE_CONFIG);\n      // firebase.firestore.setLogLevel('debug');\n    }\n\n    this.firestore = firebase.firestore();\n    this.auth = firebase.auth();\n  }\n}\n\nexport default BaseStore;\n","import BaseStore from './BaseStore';\n\nclass PlayerStore extends BaseStore {\n  get(playerId, scopes = {}) {\n    return this.firestore\n      .collection('games')\n      .doc(scopes.gameId)\n      .collection('players')\n      .doc(playerId)\n      .get()\n      .then(this._convertDocToPlayer)\n  }\n\n  create(attributes = {}) {\n    let chain = this.firestore;\n    if ('gameId' in attributes) {\n      const gameId = attributes.gameId;\n      delete attributes.gameId;\n\n      chain = chain.collection('games').doc(gameId).collection('players');\n    }\n\n    return chain\n      .add(attributes)\n      .then(playerRef => playerRef.get())\n      .then(this._convertDocToPlayer)\n  }\n\n  list(scopes = {}, onChange) {\n    let chain = this.firestore;\n    if ('gameId' in scopes) {\n      chain = chain.collection('games').doc(scopes.gameId);\n    }\n    chain = chain.collection('players');\n\n    if ('limit' in scopes) {\n      chain = chain.limit(scopes.limit);\n    }\n\n    if (onChange !== undefined) {\n      return chain.onSnapshot(playersSnapshot => {\n        let players = [];\n        playersSnapshot.forEach(playerDoc => players.push(this._convertDocToPlayer(playerDoc)));\n        onChange(players);\n      });\n    }\n\n    return chain\n      .get()\n      .then(snapshot => snapshot.docs.map((p) => this._convertDocToQuestion(p)))\n  }\n\n  _convertDocToPlayer(playerDoc) {\n    return Object.assign({ id: playerDoc.id }, playerDoc.data());\n  }\n}\n\nexport default PlayerStore;\n","import PlayerStore from '../store/PlayerStore';\n\n\nconst addPlayer = (attributes) => {\n  return new PlayerStore().create(attributes);\n};\n\nexport default addPlayer;\n","import React from 'react';\nimport { Container } from 'reactstrap';\n\nimport styles from './styles.module.css';\n\n/**\n * Vertically and horizontally centered container. Parent height should be 100%.\n */\nconst CenteredContainer = props => {\n  return (\n    <Container className={styles.centered} style={{ maxWidth: props.maxWidth || null, height: props.verticalCentered ? \"100%\" : null }}>\n      {props.children}\n    </Container>\n  );\n};\n\nexport default CenteredContainer;\n\n","export default class Game {\n  static get STATE_DRAFT() { return 'draft' }\n  static get STATE_WAITING_FOR_PLAYERS() { return 'waitingForPlayers' }\n}\n","import BaseStore from './BaseStore';\nimport Game from '../entities/Game';\n\n\nclass GameStore extends BaseStore {\n  create(attributes = {}) {\n    return this.firestore\n      .collection('games')\n      .add(Object.assign({ state: Game.STATE_DRAFT }, attributes))\n      .then(ref => ref.get())\n      .then(this._convertDocToGame)\n  }\n\n  /**\n   *\n   *\n   * @param {String} gameId\n   * @param {Function} onChange - if provided, will trigger when Game is updated\n   * @returns\n   * @memberof GameStore\n   */\n  get(gameId, onChange) {\n    const doc = this._getGameDoc(gameId)\n\n    if (onChange !== undefined) {\n      return doc.onSnapshot(gameDoc => onChange(this._convertDocToGame(gameDoc)));\n    }\n\n    return doc.get().then(this._convertDocToGame);\n  }\n\n  list(scopes = {}) {\n    let chain = this.firestore.collection('games');\n\n    if ('ownerId' in scopes) {\n      // FIXME: ideally this would be independent of the gameId\n      chain = chain.where(\"ownerId\", \"==\", scopes.ownerId);\n    }\n\n    if ('state' in scopes) {\n      chain = chain.where(\"state\", \"==\", scopes.state);\n    }\n\n    if ('shortCode' in scopes) {\n      chain = chain.where(\"shortCode\", \"==\", scopes.shortCode);\n    }\n\n    if ('limit' in scopes) {\n      chain = chain.limit(scopes.limit);\n    }\n\n    return chain\n      .get()\n      .then(snapshot => snapshot.docs.map((a) => this._convertDocToGame(a)))\n  }\n\n  update(gameId, attributes) {\n    const doc = this._getGameDoc(gameId);\n\n    if ('currentQuestionId' in attributes) {\n      attributes.currentQuestion = doc.collection('questions').doc(attributes.currentQuestionId);\n      delete attributes.currentQuestionId;\n    }\n\n    return doc.update(attributes);\n  }\n\n  _getGameDoc(gameId) {\n    return this.firestore\n      .collection('games')\n      .doc(gameId);\n  }\n\n  _convertDocToGame(gameDoc) {\n    let game = Object.assign({ id: gameDoc.id }, gameDoc.data());\n    if ('currentQuestion' in game) {\n      game.currentQuestionId = game.currentQuestion.id;\n      game.currentQuestion = game.currentQuestion.path;  // TODO: remove this\n    }\n    return game;\n  }\n}\n\nexport default GameStore;\n","import GameStore from '../store/GameStore';\n\n\nconst getGame = (gameId, onChange) => {\n  return new GameStore().get(gameId, onChange);\n};\n\nexport default getGame;\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Redirect } from \"react-router-dom\"\nimport { Button, FormGroup, Label, Input, Form } from 'reactstrap';\n\nimport addPlayer from '../use_cases/addPlayer';\nimport CenteredContainer from '../view_components/CenteredContainer';\nimport getGame from '../use_cases/getGame';\n\n\nconst JoinForm = ({ playerName, setPlayerName, joinGame }) => {\n  return (\n    <Form onSubmit={e => {\n      e.preventDefault();\n      joinGame();\n    }}>\n      <FormGroup>\n        <Label>Your Nickname:</Label>\n        <Input\n          value={playerName}\n          onChange={e => setPlayerName(e.target.value)}\n        />\n      </FormGroup>\n      <Button color=\"primary\" type=\"submit\">JOIN</Button>\n    </Form>\n  )\n}\n\nconst JoinRoute = () => {\n  let { gameId } = useParams();\n  const [playerName, setPlayerName] = useState('');\n  const [playerId, setPlayerId] = useState('');\n  const [game, setGame] = useState(null);\n\n  useEffect(() => {\n    if (gameId && game === null) {\n      getGame(gameId).then(setGame);\n    }\n  }, [gameId, game])\n\n  return (\n    <CenteredContainer maxWidth={500} verticalCentered>\n      <h1>{game ? game.name : null}</h1>\n      {playerId ?\n          <Redirect\n            to={`/play/${gameId}/as/${playerId}`}\n          />\n        : <JoinForm\n          playerName={playerName}\n          setPlayerName={setPlayerName}\n          joinGame={() => addPlayer({ name: playerName, gameId }).then(p => setPlayerId(p.id))}\n        />\n      }\n    </CenteredContainer>\n  )\n}\n\nexport default JoinRoute\n","import PlayerStore from '../store/PlayerStore';\n\n\nconst getPlayer = (playerId, scopes = {}) => {\n  return new PlayerStore().get(playerId, scopes);\n};\n\nexport default getPlayer;\n","import BaseStore from './BaseStore';\n\nclass AnswerStore extends BaseStore {\n  /**\n   * Creates an Answer.\n   *\n   * @param {Object} attributes - `gameId` will be used to nest the subcollection\n   *  and generate a fully qualified reference for `playerId` and `questionId`\n   * @returns Object - an \"Answer\" object\n   * @memberof AnswerStore\n   */\n  create(attributes) {\n    const gameId = this._popAttr(attributes, 'gameId');\n    const playerId = this._popAttr(attributes, 'playerId');\n    const questionId = this._popAttr(attributes, 'questionId');\n\n    const subcollection = this.firestore\n      .collection('games')\n      .doc(gameId)\n      .collection('answers');\n\n    return subcollection\n      .add(Object.assign({\n        player: this.firestore.doc(['/games', gameId, 'players', playerId].join('/')),\n        question: this.firestore.doc(['/games', gameId, 'questions', questionId].join('/'))\n      }, attributes))\n      .then(answerRef => answerRef.get())\n      .then(this._convertDocToAnswer)\n  }\n\n  list(scopes = {}) {\n    let chain = this.firestore;\n\n    if ('gameId' in scopes) {\n      chain = chain.collection('games').doc(scopes.gameId);\n    }\n    chain = chain.collection('answers');\n\n    if ('questionId' in scopes) {\n      // FIXME: ideally this would be independent of the gameId\n      chain = chain.where(\"question\", \"==\", this.firestore.doc(`games/${scopes.gameId}/questions/${scopes.questionId}`));\n    }\n\n    if ('limit' in scopes) {\n      chain = chain.limit(scopes.limit);\n    }\n\n    return chain\n      .get()\n      .then(snapshot => snapshot.docs.map((a) => this._convertDocToAnswer(a)))\n  }\n\n  _convertDocToAnswer(answerDoc) {\n    return Object.assign({ id: answerDoc.id }, answerDoc.data());\n  }\n\n  _popAttr(obj, attr) {\n    const val = obj[attr];\n    delete obj[attr];\n    return val;\n  }\n}\n\nexport default AnswerStore;\n","export function popKey(obj, key) {\n  const value = obj[key];\n  delete obj[key];\n  return value;\n}\n","import BaseStore from './BaseStore';\nimport { popKey } from '../utils/popKey';\n\nclass QuestionStore extends BaseStore {\n  /**\n   * Retrieves a Question from the store\n   *\n   * @param {string} questionId - if a scope is not provided, this must be a\n   *   fully qualified ref, as there is no top-level questions collection.\n   * @param {Object} [scopes={}]\n   * @returns Object\n   * @memberof QuestionStore\n   */\n  get(questionId, scopes = {}) {\n    let chain = this.firestore;\n    let addAttrs = {};\n\n    if ('gameId' in scopes) {\n      chain = chain.collection('games').doc(scopes.gameId).collection('questions');\n      addAttrs['gameId'] = scopes.gameId;\n    }\n\n    return chain\n      .doc(questionId)\n      .get()\n      .then(questionDoc => this._convertDocToQuestion(questionDoc, addAttrs));\n  }\n\n  create(attributes) {\n    let attributesCopy = Object.assign({}, attributes);\n    const gameId = popKey(attributesCopy, 'gameId');\n\n    let collection = this.firestore.collection('games').doc(gameId).collection('questions');\n\n    return collection\n      .add(attributesCopy)\n      .then(qnRef => qnRef.get())\n      .then(qnDoc => this._convertDocToQuestion(qnDoc, { gameId }));\n  }\n\n  /**\n   * Update an object\n   *\n   * @param {String} questionId\n   * @param {Object} attributes\n   * @returns Promise<void>\n   * @memberof QuestionStore\n   */\n  update(questionId, attributes) {\n    let attributesCopy = Object.assign({}, attributes);\n    const gameId = popKey(attributesCopy, 'gameId');\n\n    let doc = this.firestore.collection('games').doc(gameId).collection('questions').doc(questionId);\n\n    return doc.update(attributesCopy);\n  }\n\n  list(scopes = {}) {\n    let chain = this.firestore;\n    let addAttrs = {};\n\n    if ('gameId' in scopes) {\n      chain = chain.collection('games').doc(scopes.gameId).collection('questions');\n      addAttrs['gameId'] = scopes.gameId;\n    }\n    if ('from' in scopes) {\n      chain = chain.where(\"order\", \">\", scopes.from);\n    }\n\n    chain = chain.orderBy(\"order\");\n\n    if ('limit' in scopes) {\n      chain = chain.limit(scopes.limit);\n    }\n\n    return chain\n      .get()\n      .then(snapshot => snapshot.docs.map((q) => this._convertDocToQuestion(q, addAttrs)));\n  }\n\n  _convertDocToQuestion(questionDoc, addAttributes = {}) {\n    return Object.assign({ id: questionDoc.id }, questionDoc.data(), addAttributes);\n  }\n}\n\nexport default QuestionStore;\n","import GameStore from '../store/GameStore';\nimport AnswerStore from '../store/AnswerStore';\nimport QuestionStore from '../store/QuestionStore';\n\n\n/**\n * Saves an Answer.\n *\n * @param {Object} attributes\n * @returns Object - an \"Answer\"\n */\nconst addAnswer = (attributes) => {\n  const questionStore = new QuestionStore();\n\n  return new GameStore()\n    .get(attributes.gameId)\n    .then(game => {\n      return questionStore.get(game.currentQuestionId, { gameId: game.id });\n    })\n    .then(question => {\n      attributes.isCorrect = question.correctAnswer === attributes.choice;\n      attributes.questionId = question.id;\n      console.log(attributes)\n      return new AnswerStore().create(attributes);\n    })\n};\n\nexport default addAnswer;\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { Button, Row, Col, Alert } from 'reactstrap';\n\nimport getPlayer from '../use_cases/getPlayer';\nimport addAnswer from '../use_cases/addAnswer';\nimport getGame from '../use_cases/getGame';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\n\nconst AnswerGrid = ({ recordAnswer }) => {\n  return (\n    <Row>\n      {\n        ['A', 'B', 'C', 'D'].map((ans) =>\n          <Col sm={12} md={6} className=\"mb-4\" key={ans}>\n            <Button\n              className=\"w-100 h-100\"\n              onClick={() => recordAnswer(ans)}>\n                <strong>{ans}</strong>\n            </Button>\n          </Col>\n        )\n      }\n    </Row>\n  )\n}\n\nconst PlayerRoute = () => {\n  let { gameId, playerId } = useParams()\n  const [currentGame, setCurrentGame] = useState();\n  const [playerName, setPlayerName] = useState('')\n  const [answer, setAnswer] = useState(null)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleGameChange = (game) => {\n    if (game) {\n      // workaround to clear answer\n      setAnswer(null);\n      setCurrentGame(game);\n    }\n  }\n\n  useEffect(() => {\n    if (gameId && playerId) {\n      getGame(gameId, handleGameChange);\n      getPlayer(playerId, { gameId })\n        .then(player => setPlayerName(player.name))\n    }\n  }, [gameId, playerId])\n\n  const recordAnswer = ans => {\n    // playerName is for convenience later, though it feels a little like this knows more about the store than it should\n    addAnswer({ playerId, playerName, gameId, choice: ans })\n      .then(setAnswer)\n      .catch(e => {\n        setErrorMessage(e)\n        setTimeout(() => setErrorMessage(''), 5000)\n      })\n  }\n\n  switch (currentGame ? currentGame.state : null) {\n    case 'pendingQuestion':\n      return (\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\n          Cargando proxima pregunta...\n        </CenteredContainer>\n      )\n    case 'showingQuestion':\n      if (answer) {\n        return (\n          <CenteredContainer maxWidth={500} verticalCentered={true}>\n            Elegiste {answer.choice}!\n          </CenteredContainer>\n        )\n      }\n\n      return (\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\n          <Row className=\"mb-4\">\n            <Col sm={12}>\n              <h2>Hola {playerName}!</h2>\n              <h3>Elige tu respuesta</h3>\n            </Col>\n          </Row>\n          <AnswerGrid recordAnswer={recordAnswer}/>\n          {errorMessage ? <Alert color=\"danger\">{errorMessage}</Alert> : null}\n        </CenteredContainer>\n      );\n    case 'showingQuestionResults':\n      return (\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\n          <div>Mostrando resultados de la pregunta</div>\n        </CenteredContainer>\n      );\n\n    default:\n      return (\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\n          Esperando a que empieze el juego\n        </CenteredContainer>\n      )\n  }\n}\n\nexport default PlayerRoute\n","import GameStore from '../store/GameStore';\nimport Game from '../entities/Game';\n\n\nconst findGamesByShortCode = (shortCode) => {\n  return new GameStore().list({ shortCode: String(shortCode), state: Game.STATE_WAITING_FOR_PLAYERS });\n};\n\nexport default findGamesByShortCode;\n","import React, { useState } from 'react'\nimport { Link, Redirect } from \"react-router-dom\"\nimport { Button, Form, FormGroup, Label, Input, ListGroup, ListGroupItem } from 'reactstrap';\n\nimport CenteredContainer from '../../view_components/CenteredContainer';\nimport styles from './styles.module.css'\nimport findGamesByShortCode from '../../use_cases/findGamesByShortCode';\n\n\nconst HomeRoute = () => {\n  const [games, setGames] = useState([]);\n  const [shortCode, setShortCode] = useState('');\n\n  if (games.length > 1) {\n    return (\n      <CenteredContainer maxWidth={500} verticalCentered={true}>\n        <ListGroup>\n          {\n            games.map(game => (\n              <Link key={game.id} to={`/join/${game.id}`}>\n                <ListGroupItem\n                  tag=\"button\"\n                  action\n                >\n                  {game.name}\n                </ListGroupItem>\n              </Link>\n            ))\n          }\n        </ListGroup>\n      </CenteredContainer>\n    );\n  }\n  else if (games.length == 1) {\n    return <Redirect to={`/join/${games[0].id}`} />;\n  }\n  else {\n    return (\n      <CenteredContainer maxWidth={500} verticalCentered={true}>\n        <h1 className={styles.hero_heading}>Vialquiz!</h1>\n        <Form\n          className=\"mb-5\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            findGamesByShortCode(shortCode).then(setGames);\n          }}\n        >\n          <FormGroup>\n            <Label for=\"shortCode\">Codigo de juego:</Label>\n            <Input id=\"shortCode\" type=\"number\" value={shortCode} onChange={e => setShortCode(e.target.value)} />\n          </FormGroup>\n          <Button\n            color=\"primary\"\n            disabled={!shortCode}\n            type=\"submit\"\n          >\n            Encontrar juego\n          </Button>\n        </Form>\n      </CenteredContainer>\n    );\n  }\n}\n\nexport default HomeRoute\n","import PlayerStore from '../store/PlayerStore';\nimport GameStore from '../store/GameStore';\n\n\nconst getLobbyPlayers = (gameId, onChange, playerStore = new PlayerStore(), gameStore = new GameStore()) => {\n  gameStore.update(gameId, { state: 'waitingForPlayers' });\n  return playerStore.list({ gameId }, onChange);\n};\n\nexport default getLobbyPlayers;\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from \"react-router-dom\"\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap';\n\nimport getLobbyPlayers from '../use_cases/getLobbyPlayers';\nimport getGame from '../use_cases/getGame';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\n\nconst PlayerList = ({ players }) => {\n  return (\n    <ListGroup>\n      {\n        players.map(player => (\n          <ListGroupItem key={player.id}>{player.name}</ListGroupItem>\n        ))\n      }\n    </ListGroup>\n  );\n}\n\n\nconst LobbyRoute = props => {\n  let { gameId } = useParams();\n  const [players, setPlayers] = useState([]);\n  const [game, setGame] = useState(null);\n  const joinUrl = `${window.location.origin}/cahoots/`;\n\n  useEffect(() => {\n    if (gameId) {\n      getLobbyPlayers(gameId, setPlayers);\n      getGame(gameId).then(setGame);\n    }\n  }, [gameId])\n\n  return (\n    <CenteredContainer verticalCentered={true} maxWidth={800}>\n      <h1 className=\"mb-4\">Esperando a que se unan jugadores</h1>\n      <p>\n        Para unirse entra a <a href={joinUrl} rel=\"noopener noreferrer\" target=\"_blank\">{joinUrl}</a> y pone el codigo <strong>{game ? game.shortCode : \"___\"}</strong>\n      </p>\n      <PlayerList players={players} />\n      <div className=\"mt-4\">\n        <Link to={`/host/${gameId}/questions/pending`}>\n          <Button color=\"primary\">Empezar</Button>\n        </Link>\n      </div>\n    </CenteredContainer>\n  )\n}\n\nexport default LobbyRoute\n","import BaseStore from './BaseStore';\n\nclass UserStore extends BaseStore {\n  create(attributes = {}) {\n    const { email, password } = attributes;\n\n    return this.auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(userCredentials => {\n        const firebaseUser = userCredentials.user;\n        return this._convertUser(firebaseUser);\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // auth/email-already-in-use\n        // auth/invalid-email\n        // auth/operation-not-allowed\n        if (errorCode === 'auth/weak-password') {\n          alert('The password is too weak.');\n        } else {\n          alert(errorMessage);\n        }\n      });\n  }\n\n  login({ email, password }) {\n    return this.auth\n      .signInWithEmailAndPassword(email, password)\n      .then(userCredentials => {\n        const firebaseUser = userCredentials.user;\n        return this._convertUser(firebaseUser);\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // auth/email-already-in-use\n        // auth/invalid-email\n        // auth/operation-not-allowed\n        if (errorCode === 'auth/weak-password') {\n          alert('The password is too weak.');\n        } else {\n          alert(errorMessage);\n        }\n      });\n  }\n\n  onCurrentUserChange(handleChange) {\n    this.auth.onAuthStateChanged(user => {\n      if (user) {\n        handleChange(this._convertUser(user));\n      }\n    })\n  }\n\n  _convertUser(firebaseUser) {\n    return {\n      id: firebaseUser.uid,\n      email: firebaseUser.email,\n      name: firebaseUser.displayName,\n    };\n  }\n}\n\nexport default UserStore;\n","import UserStore from \"../store/UserStore\";\n\nconst signupUser = ({ email, password }) => {\n  const userStore = new UserStore();\n\n  return userStore.create({ email, password });\n}\n\nexport default signupUser;\n","import UserStore from \"../store/UserStore\";\n\nconst loginUser = ({ email, password }) => {\n  const userStore = new UserStore();\n\n  return userStore.login({ email, password });\n}\n\nexport default loginUser;\n","import React, { useState } from 'react'\nimport { Redirect } from \"react-router-dom\"\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport signupUser from '../use_cases/signupUser';\nimport loginUser from '../use_cases/loginUser';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\nconst handleSubmit = (event, { email, password, authFn, successCallback }) => {\n  event.preventDefault();\n  authFn({ email, password })\n    .then(user => successCallback(user))\n}\n\nconst SignupForm = ({ onUserChange }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <Form className=\"mb-5\" onSubmit={f => handleSubmit(f, { email, password, authFn: signupUser, successCallback: onUserChange })}>\n      <FormGroup>\n        <Label for=\"email\">Email:</Label>\n        <Input id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\n      </FormGroup>\n      <FormGroup>\n        <Label>Password:</Label>\n        <Input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n      </FormGroup>\n      <Button color=\"primary\">Sign Up</Button>\n    </Form>\n  );\n}\n\nconst LoginForm = ({ onUserChange }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <Form className=\"mb-5\" onSubmit={f => handleSubmit(f, { email, password, authFn: loginUser, successCallback: onUserChange })}>\n      <FormGroup>\n        <Label for=\"email\">Email:</Label>\n        <Input id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\n      </FormGroup>\n      <FormGroup>\n        <Label>Password:</Label>\n        <Input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n      </FormGroup>\n      <Button color=\"primary\">Login</Button>\n    </Form>\n  );\n}\n\nconst LoginRoute = props => {\n  const [isExistingUser, setIsExistingUser] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const toggleForm = event => {\n    event.preventDefault();\n    setIsExistingUser(!isExistingUser);\n  }\n\n  if (user) {\n    return <Redirect to='/games' />\n  } else if (isExistingUser) {\n    return (\n      <CenteredContainer maxWidth={500} verticalCentered>\n        <h1>Logeate</h1>\n        <LoginForm onUserChange={setUser} />\n        <div>\n          No tienes cuenta? <br />\n          <Button color=\"link\" onClick={toggleForm}>Sign Up!</Button>\n        </div>\n      </CenteredContainer>\n    );\n  } else {\n    return (\n      <CenteredContainer maxWidth={500} verticalCentered>\n        <h1>Registrate</h1>\n        <SignupForm onUserChange={setUser} />\n        <div>\n          Cuenta existente? <br />\n          <Button color=\"link\" onClick={toggleForm}>Login</Button>\n        </div>\n      </CenteredContainer>\n    );\n  }\n}\n\nexport default LoginRoute\n","import UserStore from \"../store/UserStore\";\n\nconst getCurrentUser = () => {\n  const userStore = new UserStore();\n\n  return new Promise(resolve => userStore.onCurrentUserChange(resolve));\n}\n\nexport default getCurrentUser;\n","\nimport GameStore from \"../store/GameStore\";\nimport getCurrentUser from \"./getCurrentUser\";\n\n\nconst getCurrentUserGames = () => {\n  const gameStore = new GameStore();\n\n  return getCurrentUser().then(user => user ? gameStore.list({ ownerId: user.id }) : null);\n}\n\nexport default getCurrentUserGames;\n","import React, { useState, useEffect } from 'react'\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport getCurrentUserGames from '../use_cases/getCurrentUserGames';\nimport { Redirect } from 'react-router-dom';\n\n\nconst MyGamesRoute = () => {\n  const [games, setGames] = useState([]);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n\n  useEffect(() => {\n    getCurrentUserGames().then(setGames);\n  }, []);\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  } else {\n    return (\n      <Container style={{maxWidth: \"500px\"}}>\n        <h1>Your Games</h1>\n        <ListGroup>\n          {\n            games.map(game => (\n              <ListGroupItem\n                key={game.id}\n                onClick={() => setRedirectUrl(`/games/${game.id}`)}\n                tag=\"button\"\n                action\n              >\n                {game.name}\n              </ListGroupItem>\n            ))\n          }\n          <ListGroupItem\n            onClick={() => setRedirectUrl('/games/create')}\n            tag=\"button\"\n            color=\"info\"\n            action\n          >\n            Crear juego\n          </ListGroupItem>\n        </ListGroup>\n      </Container>\n    )\n  }\n}\n\nexport default MyGamesRoute\n","import GameStore from '../store/GameStore';\n\n\nconst createGame = (attributes, gameStore = new GameStore()) => {\n  // generate a random shortcode\n  const shortCode = String(Math.floor(Math.random() * Math.floor(9999)));\n  return gameStore.create(Object.assign({ shortCode }, attributes));\n};\n\nexport default createGame;\n","import React, { useState, useEffect } from 'react'\nimport { Container, FormGroup, Label, Input, Button } from 'reactstrap';\nimport getCurrentUser from '../use_cases/getCurrentUser';\nimport createGame from '../use_cases/createGame';\nimport { Redirect } from 'react-router-dom';\n\n\nconst save = (gameAttributes, onCreate) => {\n  return createGame(gameAttributes).then(onCreate);\n}\n\nconst CreateGameRoute = props => {\n  const [user, setUser] = useState(null);\n  const [gameName, setGameName] = useState('');\n  const [game, setGame] = useState(null);\n\n  useEffect(() => {\n    getCurrentUser().then(setUser);\n  }, []);\n\n  if (game) {\n    return <Redirect to=\"/games\" />;\n  } else {\n    return (\n      <Container style={{maxWidth: \"500px\"}}>\n        <h1>Create a Game</h1>\n        <FormGroup>\n          <Label for=\"name\">Name:</Label>\n          <Input id=\"name\" name=\"name\" value={gameName} onChange={e => setGameName(e.target.value)} />\n        </FormGroup>\n        <Button color=\"primary\" onClick={() => save({ name: gameName, ownerId: user.id }, setGame)}>Save</Button>\n      </Container>\n    )\n  }\n}\n\nexport default CreateGameRoute\n","import GameStore from '../store/GameStore';\nimport QuestionStore from '../store/QuestionStore';\n\nconst startNextQuestion = (gameId) => {\n  const gameStore = new GameStore();\n  const questionStore = new QuestionStore();\n\n  gameStore.update(gameId, { state: 'pendingQuestion' });\n  return gameStore\n    .get(gameId)\n    .then(game => {\n      if ('currentQuestion' in game) {\n        return questionStore.get(game.currentQuestion);\n      }\n      else {\n        return;\n      }\n    })\n    .then(currentQuestion => {\n      const nextOrder = currentQuestion ? currentQuestion.order : 0 ;\n      return questionStore.list({ gameId, from: nextOrder, limit: 1 });\n    })\n    .then(questionArray => {\n      const question = questionArray[0];\n      if (question) {\n        gameStore.update(gameId, { currentQuestionId: question.id });\n      }\n\n      return question;\n    });\n}\n\nexport default startNextQuestion;\n","const calculateTimeLeft = date => {\n  const difference = (date - Date.now()) / 1000;\n  return difference > 0 ? difference : 0;\n};\n\nconst tickTimer = ({ endDate, intervalCallback, endedCallback }) => {\n  setTimeout(() => {\n    // timeLeft is in seconds\n    const timeLeft = calculateTimeLeft(endDate);\n    if (timeLeft > 0) {\n      intervalCallback(timeLeft);\n      tickTimer({ endDate, intervalCallback, endedCallback });\n    }\n    else {\n      endedCallback(timeLeft);\n    }\n  }, 1000);\n};\n\nexport const startTimer = ({ seconds, intervalCallback, endedCallback }) => {\n  const endDate = new Date(Date.now() + 1000 * seconds);\n  tickTimer({ endDate, intervalCallback, endedCallback });\n};\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Redirect } from \"react-router-dom\"\n\nimport startNextQuestion from '../use_cases/startNextQuestion';\nimport { startTimer } from '../utils/calculateTimeLeft';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\nconst SECONDS_TO_QUESTION = 5;\n\nconst PendingQuestionRoute = ({ parentUrl }) => {\n  let { gameId } = useParams();\n  const [ timeLeft, setTimeLeft ] = useState(SECONDS_TO_QUESTION);\n  const [ nextQuestion, setNextQuestion ] = useState(null);\n\n  useEffect(() => {\n    if (gameId) {\n      startTimer({ seconds: SECONDS_TO_QUESTION, intervalCallback: setTimeLeft, endedCallback: setTimeLeft });\n      startNextQuestion(gameId).then(setNextQuestion);\n    }\n  }, [gameId])\n\n  return (\n    <CenteredContainer verticalCentered={true}>\n      <div className=\"mb-4\">Proxima pregunta en...</div>\n      <div className=\"display-1\">\n        {Math.ceil(timeLeft)}\n      </div>\n      {timeLeft <= 0 && nextQuestion\n        ? <Redirect to={`${parentUrl}/questions/current`} />\n        : null\n      }\n    </CenteredContainer>\n  )\n}\n\nexport default PendingQuestionRoute\n","import QuestionStore from \"../store/QuestionStore\";\n\nconst getQuestion = (questionId, scopes, questionStore = new QuestionStore()) => {\n  return questionStore.get(questionId, scopes)\n};\n\nexport default getQuestion;\n","import GameStore from '../store/GameStore';\nimport AnswerStore from '../store/AnswerStore';\n\nconst calculateQuestionResults = (gameId, questionId, gameStore = new GameStore(), answerStore = new AnswerStore()) => {\n  gameStore.update(gameId, { state: 'showingQuestionResults' });\n  return answerStore\n    .list({ gameId, questionId })\n    .then(answers => {\n      let results = { 'A': [], 'B': [], 'C': [], 'D': []};\n      answers.forEach(answer => {\n        results[answer.choice] = results[answer.choice].concat(answer.playerName);\n      });\n      return results;\n    });\n}\n\nexport default calculateQuestionResults;\n","import QuestionStore from '../store/QuestionStore';\n\nconst countTotalQuestions = (gameId) => {\n  const questionStore = new QuestionStore();\n  return questionStore\n    .list({ gameId })\n    .then(questions => questions.length);\n}\n\nexport default countTotalQuestions;\n","import React, { useEffect, useState } from 'react'\nimport { useParams, Link } from \"react-router-dom\"\nimport { Button, Card, CardBody, Row, Col, CardTitle, CardText } from 'reactstrap';\n\nimport getQuestion from '../use_cases/getQuestion';\nimport calculateQuestionResults from '../use_cases/calculateQuestionResults';\nimport countTotalQuestions from '../use_cases/countTotalQuestions';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\n\nconst isCorrectChoice = (question, choice) => {\n  return question.correctAnswer === choice;\n}\n\nconst ResultBoard = ({ result, className, question }) => {\n  return (\n    <div className={className}>\n      <h2 className=\"mb-4\">{question ? question.text : null}</h2>\n      <Row>\n        {\n          Object.entries(result).map(([answer, players]) => (\n            <Col sm={12} md={6} className=\"mb-4\">\n              <Card\n                color={isCorrectChoice(question, answer) ? 'success' : null}\n                inverse={isCorrectChoice(question, answer) ? true : null}\n              >\n                <CardBody>\n                  <CardTitle>\n                    <strong className='mr-2'>{answer}</strong>\n                    {isCorrectChoice(question, answer) ? '✔️' : '❌'}\n                  </CardTitle>\n                  <CardText>\n                    {players.join(', ')}\n                  </CardText>\n                </CardBody>\n              </Card>\n            </Col>\n          ))\n        }\n      </Row>\n    </div>\n  )\n}\n\nconst QuestionResultsRoute = ({ parentUrl }) => {\n  let { gameId, questionId } = useParams()\n  let [result, setResult] = useState({})\n  let [question, setQuestion] = useState(null)\n  let [totalQuestionCount, setTotalQuestionCount] = useState(null)\n\n  useEffect(() => {\n    if (gameId && questionId) {\n      getQuestion(questionId, { gameId }).then(setQuestion);\n      countTotalQuestions(gameId).then(setTotalQuestionCount);\n      calculateQuestionResults(gameId, questionId).then(setResult);\n    }\n  }, [gameId, questionId])\n\n  return (\n    <CenteredContainer verticalCentered={true}>\n      <ResultBoard className=\"mb-4\" result={result} question={question} />\n      {question && question.order >= totalQuestionCount ?\n        <Link to={`${parentUrl}/results/final`}>\n          <Button color=\"primary\">\n            Show Final Results\n          </Button>\n        </Link>\n        :\n        <Link to={`${parentUrl}/questions/pending`}>\n          <Button color=\"primary\">\n            Next Question\n          </Button>\n        </Link>\n      }\n    </CenteredContainer>\n  )\n}\n\nexport default QuestionResultsRoute\n\n// no result, no question, start button\n// no result, question, no buttons if time out, else show button if within time\n// have result, show result, hide question, next button (clears result)\n","import AnswerStore from '../store/AnswerStore';\n\n\n/**\n * Saves an Answer.\n *\n * @param {Object} attributes\n * @returns Object - an \"Answer\"\n */\nconst calculateFinalResults = (gameId) => {\n  const answerStore = new AnswerStore();\n\n  return answerStore.list({ gameId })\n    .then(answers => {\n      return answers\n        .filter(val => 'isCorrect' in val && !!val.isCorrect)\n        .reduce((acc, curr) => {\n          if (curr.playerName in acc) {\n            acc[curr.playerName] += 1;\n          } else {\n            acc[curr.playerName] = 1;\n          }\n          return acc;\n        }, {});\n    })\n};\n\nexport default calculateFinalResults;\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { ListGroup, ListGroupItem, Badge } from 'reactstrap';\nimport calculateFinalResults from '../use_cases/calculateFinalResults';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\n\n// Compares two Arrays of playerName, score in terms of ascending score.\nconst sortScores = (a, b) => {\n  const [, score1] = a;\n  const [, score2] = b;\n\n  if (score1 > score2) {\n    return -1;\n  }\n  if (score1 < score2) {\n    return 1;\n  }\n  // a must be equal to b\n  return 0;\n}\n\nconst Leaderboard = ({ results }) => {\n  let scores = Object.entries(results);\n  scores.sort(sortScores);\n\n  return (\n    <ListGroup>\n      {\n        scores.slice(0, 5).map(([key, value], index) => {\n          if (index <= 2) {\n            return <ListGroupItem key={key} className=\"d-flex justify-content-between\">{key}<Badge className=\"ml-4 p-2\" color=\"success\">{value}</Badge></ListGroupItem>;\n          } else {\n            return <ListGroupItem key={key} className=\"d-flex justify-content-between\">{key}<Badge className=\"ml-4 p-2\">{value}</Badge></ListGroupItem>;\n          }\n        })\n      }\n    </ListGroup>\n\n  );\n}\n\nconst FinalResultsRoute = props => {\n  let { gameId } = useParams()\n  let [results, setResults] = useState({})\n\n  useEffect(() => {\n    if (gameId) {\n      calculateFinalResults(gameId).then(setResults);\n    }\n  }, [gameId])\n\n  return (\n    <CenteredContainer verticalCentered={true} maxWidth={500}>\n      <h1>\n        Resultados Finales\n      </h1>\n      <Leaderboard results={results} />\n    </CenteredContainer>\n  )\n}\n\nexport default FinalResultsRoute\n","import GameStore from '../store/GameStore';\nimport QuestionStore from '../store/QuestionStore';\n\nconst showCurrentQuestion = (gameId, gameStore = new GameStore(), questionStore = new QuestionStore()) => {\n  gameStore.update(gameId, { state: 'showingQuestion' });\n  return gameStore\n    .get(gameId)\n    .then(game => {\n      return questionStore.get(game.currentQuestion)\n    });\n}\n\nexport default showCurrentQuestion;\n","import React from 'react'\nimport { Card, CardBody, Row, Col, CardTitle, CardText } from 'reactstrap';\n\n\n\nconst Question = ({ question, className }) => (\n  <div className={className}>\n    <h2 className=\"mb-4\">{question.text}</h2>\n    <Row>\n      {\n        ['A', 'B', 'C', 'D'].map((ans) =>\n          <Col key={ans} sm={12} md={6} className=\"mb-4\">\n            <Card>\n              <CardBody>\n                <CardTitle><strong>{ans}</strong></CardTitle>\n                <CardText>\n                  {question[`answer${ans}`]}\n                </CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        )\n      }\n    </Row>\n  </div>\n)\n\nexport default Question\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from \"react-router-dom\"\nimport { Button } from 'reactstrap';\n\nimport showCurrentQuestion from '../use_cases/showCurrentQuestion'\nimport Question from '../view_components/Question'\nimport { startTimer } from '../utils/calculateTimeLeft';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\nconst SECONDS_TO_QUESTION = 10;\n\nconst ShowResultsBtn = ({ isVisible, linkTo }) => {\n  return isVisible ?\n    (\n      <Link to={linkTo}>\n        <Button color=\"primary\">Ver resultados</Button>\n      </Link>\n    ) : null\n}\n\nconst CurrentQuestionRoute = ({ parentUrl }) => {\n  let { gameId } = useParams();\n  const [question, setQuestion] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(SECONDS_TO_QUESTION);\n\n  useEffect(() => {\n    if (gameId) {\n      startTimer({ seconds: SECONDS_TO_QUESTION, intervalCallback: setTimeLeft, endedCallback: setTimeLeft });\n      showCurrentQuestion(gameId).then(setQuestion);\n    }\n  }, [gameId])\n\n  return (\n    <CenteredContainer verticalCentered={true}>\n      {question ?\n          <div>\n            <Question question={question} />\n            <div className=\"mt-4\">Tiempo restante:</div>\n            <div className=\"display-1\">\n              {Math.ceil(timeLeft)}\n            </div>\n            <ShowResultsBtn\n              isVisible={timeLeft <= 0}\n              linkTo={`${parentUrl}/results/${question.id}`}\n            />\n          </div>\n        : <div>Loading...</div>\n      }\n    </CenteredContainer>\n  )\n}\n\nexport default CurrentQuestionRoute\n","import React from 'react'\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nimport PendingQuestionRoute from './PendingQuestionRoute';\nimport QuestionResultsRoute from './QuestionResultsRoute';\nimport FinalResultsRoute from './FinalResultsRoute';\nimport CurrentQuestionRoute from './CurrentQuestionRoute';\n\n\nconst HostRoute = () => {\n  let { url, path } = useRouteMatch();\n\n  return (\n    <Switch base>\n      <Route path={`${path}/questions/pending`}>\n        <PendingQuestionRoute parentUrl={url} />\n      </Route>\n      <Route path={`${path}/questions/current`}>\n        <CurrentQuestionRoute parentUrl={url} />\n      </Route>\n      <Route path={`${path}/results/final`}>\n        <FinalResultsRoute parentUrl={url} />\n      </Route>\n      <Route path={`${path}/results/:questionId`}>\n        <QuestionResultsRoute parentUrl={url} />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default HostRoute\n","import QuestionStore from \"../store/QuestionStore\";\n\nconst getQuestions = (scopes) => {\n  const questionStore = new QuestionStore();\n  return questionStore.list(scopes)\n};\n\nexport default getQuestions;\n","import QuestionStore from \"../store/QuestionStore\";\nimport { popKey } from '../utils/popKey';\n\n/**\n * Creates a new Question or saves an existing one.\n *\n * @param {Object} attributes - should minimally contain `gameId`. If no `id` is included, is assumed to be a new Question\n * @returns Promise - resolves to either Object or void\n */\nconst saveQuestion = (attributes, questionStore = new QuestionStore()) => {\n  let attributesCopy = Object.assign({}, attributes);\n\n  if ('id' in attributesCopy) {\n    const questionId = popKey(attributesCopy, 'id');\n    return questionStore.update(questionId, attributesCopy);\n  } else {\n    return questionStore.create(attributesCopy);\n  }\n};\n\nexport default saveQuestion;\n","import React, { useState } from 'react';\nimport { InputGroup, InputGroupAddon, InputGroupText, Input, Card, CardTitle, Button, Spinner, FormGroup, Label } from 'reactstrap';\nimport saveQuestion from '../use_cases/saveQuestion';\n\nconst STATE_DEFAULT = 'default';\nconst STATE_SAVING = 'saving';\n\n\nexport const EditableQuestion = ({ question }) => {\n  const [draftQuestion, setDraftQuestion] = useState(question)\n  const [componentState, setComponentState] = useState(STATE_DEFAULT);\n\n  const updateDraft = (newAttributes) => {\n    setDraftQuestion(Object.assign({}, draftQuestion, newAttributes));\n  }\n\n  return (\n    <div>\n      <Card body className=\"mt-4 mb-4\">\n        <CardTitle>\n          <InputGroup className=\"mb-2\">\n            <Input\n              type=\"textarea\"\n              placeholder=\"Question text\"\n              value={draftQuestion.text || ''}\n              onChange={e => updateDraft({ text: e.target.value })}\n            />\n          </InputGroup>\n        </CardTitle>\n        {['answerA', 'answerB', 'answerC', 'answerD'].map((ansKey) => (\n          <InputGroup key={ansKey} className=\"mb-2\">\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>{ansKey}</InputGroupText>\n            </InputGroupAddon>\n            <Input\n              placeholder=\"Answer\"\n              value={ansKey in draftQuestion ? draftQuestion[ansKey] : ''}\n              onChange={e => updateDraft({[ansKey]: e.target.value})}\n            />\n          </InputGroup>\n        ))}\n        <FormGroup>\n          <Label for=\"correctAnswerDropdown\">Correct Answer</Label>\n          <Input\n            type=\"select\"\n            name=\"correctAnswer\"\n            id=\"correctAnswerDropdown\"\n            data-testid=\"correctAnswerDropdown\"\n            value={draftQuestion.correctAnswer || 'A'}\n            onChange={e => updateDraft({ correctAnswer: e.target.value })}\n          >\n            <option>A</option>\n            <option>B</option>\n            <option>C</option>\n            <option>D</option>\n          </Input>\n        </FormGroup>\n        {componentState === STATE_SAVING ?\n          <Button disabled color=\"primary\" className=\"mt-4\">\n            <Spinner type=\"grow\" size=\"sm\" color=\"info\" className=\"mr-2\" />\n            Saving...\n          </Button>\n          :\n          <Button\n            color=\"primary\"\n            className=\"mt-4\"\n            onClick={() => {\n              setComponentState(STATE_SAVING);\n              saveQuestion(draftQuestion).then(() => setComponentState(STATE_DEFAULT));\n            }}\n          >\n            Save\n          </Button>\n        }\n      </Card>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react'\nimport { Button } from 'reactstrap';\nimport { Link, useParams } from 'react-router-dom';\nimport getGame from '../use_cases/getGame';\nimport getQuestions from '../use_cases/getQuestions';\nimport { EditableQuestion } from '../view_components/EditableQuestion';\nimport saveQuestion from '../use_cases/saveQuestion';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\nconst GameDetailsRoute = props => {\n  const { gameId } = useParams();\n  const [game, setGame] = useState(null);\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    if (gameId && game === null) {\n      getGame(gameId)\n        .then(game => {\n          setGame(game);\n          return game;\n        })\n        .then(game => getQuestions({ gameId: game.id }))\n        .then(setQuestions);\n    }\n  }, [gameId, game]);\n\n  if (game) {\n    return (\n      <CenteredContainer maxWidth={500}>\n        <h1 className=\"mb-4\">{game.name}</h1>\n        {questions.length > 0\n          ? <Link to={`/lobby/${gameId}`}>\n              <Button color=\"success\" size=\"lg\">\n                Comenzar juego\n              </Button>\n            </Link>\n          : null\n        }\n        {questions.map(question => <EditableQuestion key={question.id} question={question}/>)}\n        <Button\n          onClick={() => {\n            saveQuestion({ gameId: gameId, order: questions.length + 1 })\n              .then(newQn => setQuestions(questions.concat([newQn])))\n          }}\n        >\n          Add Question\n        </Button>\n      </CenteredContainer>\n    );\n  } else {\n    return (<CenteredContainer maxWidth={500}>Loading...</CenteredContainer>)\n  }\n}\n\nexport default GameDetailsRoute\n","import React, { useState } from 'react'\nimport { Redirect, useLocation } from \"react-router-dom\"\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\n\nimport CenteredContainer from '../view_components/CenteredContainer';\n\n\nconst useQueryParams = key => {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst FindGameRoute = props => {\n  const queryParams = useQueryParams();\n  const gameIdPrefix = queryParams.get('game');\n\n  return (\n    <CenteredContainer maxWidth={500} verticalCentered>\n      {gameIdPrefix}\n    </CenteredContainer>\n  )\n}\n\nexport default FindGameRoute;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport JoinRoute from './routes/JoinRoute'\nimport PlayerRoute from './routes/PlayerRoute'\nimport HomeRoute from './routes/HomeRoute';\nimport LobbyRoute from './routes/LobbyRoute';\nimport LoginRoute from './routes/LoginRoute';\nimport MyGamesRoute from './routes/MyGamesRoute';\nimport CreateGameRoute from './routes/CreateGameRoute';\nimport HostRoute from './routes/HostRoute';\nimport GameDetailsRoute from './routes/GameDetailsRoute';\nimport FindGameRoute from './routes/FindGameRoute';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\">\n            <LoginRoute />\n          </Route>\n          <Route path=\"/host/:gameId\">\n            <HostRoute />\n          </Route>\n          <Route path=\"/lobby/:gameId\">\n            <LobbyRoute />\n          </Route>\n          <Route path=\"/play/:gameId/as/:playerId\">\n            <PlayerRoute />\n          </Route>\n          <Route path=\"/join/:gameId\">\n            <JoinRoute />\n          </Route>\n          <Route path=\"/join\">\n            <FindGameRoute />\n          </Route>\n          <Route path=\"/games/create\">\n            <CreateGameRoute />\n          </Route>\n          <Route path=\"/games/:gameId\">\n            <GameDetailsRoute />\n          </Route>\n          <Route exact path=\"/games\">\n            <MyGamesRoute />\n          </Route>\n          <Route path=\"/\">\n            <HomeRoute />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}